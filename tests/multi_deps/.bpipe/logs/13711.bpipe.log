bpipe.Runner	[1]	INFO	|10:33:36 Starting 
bpipe.Runner	[1]	INFO	|10:33:37 OS: Linux (2.6.32-44-server) Java: 1.7.0_25 Vendor: Oracle Corporation 
bpipe.Runner	[1]	INFO	|10:33:37 Initializing plugins ... 
bpipe.Config	[1]	INFO	|10:33:37 No plugins directory found: /lustre/scratch112/sanger/cgppipe/canPipe/software/bpipe_git/tests/multi_deps/.bpipe/plugins 
bpipe.Runner	[1]	INFO	|10:33:37 Reading user config ...  
bpipe.Config	[1]	INFO	|10:33:37 No configuration file found in same dir as pipeline file 
bpipe.Config	[1]	INFO	|10:33:37 No local configuration file found 
bpipe.Utils	[10]	INFO	|10:33:37 Read config from /nfs/users/nfs_c/cgppipe/canpipe/software/bpipe_git/tests/multi_deps/../../bin/../src/main/config/bpipe.config executed in 0.330 seconds 
bpipe.Utils	[1]	INFO	|10:33:37 Read user config executed in 0.557 seconds 
bpipe.Runner	[1]	INFO	|10:33:37 Loading tool database ...  
bpipe.ToolDatabase	[11]	INFO	|10:33:37 Loading tool database from user configuration 
bpipe.NotificationManager	[14]	INFO	|10:33:37 Configuring notifications 
bpipe.Concurrency	[13]	INFO	|10:33:37 Creating thread pool with 32 threads to execute parallel pipelines 
bpipe.NotificationManager	[14]	INFO	|10:33:37 Trying class name file for notification channel file 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool samtools 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool bwa 
bpipe.Runner	[1]	INFO	|10:33:37 No CLI parameters specified 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool bowtie 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool fastqc 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool coverageBed 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool fastx_clipper 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool convert2annovar.pl 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool summarize_annovar.pl 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool bowtie2 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool GenomeAnalysisTK 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool MarkDuplicates 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool signalp 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool variant_effect_predictor.pl 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool igvtools 
bpipe.Tool	[11]	INFO	|10:33:37 Configured meta data about tool ls 
bpipe.NotificationManager	[14]	INFO	|10:33:37 Unable to create notification channel using class file: java.lang.ClassNotFoundException: file 
bpipe.NotificationManager	[14]	INFO	|10:33:37 Trying class name bpipe.FILENotificationChannel for notification channel file 
bpipe.NotificationManager	[14]	INFO	|10:33:37 Unable to create notification channel using class bpipe.FILENotificationChannel: java.lang.ClassNotFoundException: bpipe.FILENotificationChannel 
bpipe.NotificationManager	[14]	INFO	|10:33:37 Trying class name bpipe.file for notification channel file 
bpipe.NotificationManager	[14]	INFO	|10:33:37 Unable to create notification channel using class bpipe.file: java.lang.ClassNotFoundException: bpipe.file 
bpipe.NotificationManager	[14]	INFO	|10:33:37 Trying class name bpipe.FileNotificationChannel for notification channel file 
bpipe.NotificationManager	[14]	INFO	|10:33:37 Successfully created notification channel using class bpipe.FileNotificationChannel 
bpipe.Runner	[1]	INFO	|10:33:37 Parsing script ...  
bpipe.Runner	[1]	INFO	|10:33:37 Run ...  
bpipe.Pipeline	[1]	INFO	|10:33:37 Running with input [test1.gz, test2.gz] 
bpipe.PipelineCategory	[1]	INFO	|10:33:37 Found closure variable align_bwa 
bpipe.Pipeline	[1]	WARNING	|10:33:37 Pipeline folder /nfs/users/nfs_c/cgppipe/bpipes could not be found 
bpipe.Pipeline	[1]	INFO	|10:33:37 Loaded external reference: args 
bpipe.Pipeline	[1]	INFO	|10:33:37 External reference args is overridden by local reference 
bpipe.Pipeline	[1]	INFO	|10:33:37 Loaded external reference: align_bwa 
bpipe.Pipeline	[1]	INFO	|10:33:37 External reference align_bwa is overridden by local reference 
bpipe.Pipeline	[1]	INFO	|10:33:38 Running segment with inputs [test1.gz, test2.gz] 
bpipe.Dependencies	[1]	INFO	|10:33:38 Checking input (s) [test1.gz, test2.gz] 
bpipe.Dependencies	[15]	INFO	|10:33:38 Reading property file .bpipe/outputs/align_bwa.test1.sai.properties 
bpipe.Dependencies	[17]	INFO	|10:33:38 Reading property file .bpipe/outputs/align_bwa.test1.bam.properties 
bpipe.Dependencies	[16]	INFO	|10:33:38 Reading property file .bpipe/outputs/align_bwa.test2.sai.properties 
bpipe.Utils	[1]	INFO	|10:33:38 Output folder scan (concurrency=5) executed in 0.029 seconds 
bpipe.Dependencies	[1]	INFO	|10:33:38 External inputs: [[test1.gz, test2.gz], [test1.gz, test2.gz], [test1.gz, test2.gz]] for outputs [test1.sai, test2.sai, test1.bam] 
bpipe.Dependencies	[1]	INFO	|10:33:38 There are 1 output groups 
bpipe.Dependencies	[1]	INFO	|10:33:38 Subtracting 3 remaining outputs from 3 total outputs 
bpipe.Dependencies	[1]	INFO	|10:33:38 There are 0 remaining outputs 
bpipe.Dependencies	[1]	INFO	|10:33:38 ----- test1.sai / entry 204920650 ------ 
bpipe.Dependencies	[1]	INFO	|10:33:38 test1.sai is newer than input files 
bpipe.Dependencies	[1]	INFO	|10:33:38 test1.sai does not exist 
bpipe.Dependencies	[1]	INFO	|10:33:38 test1.sai removed but not by bpipe 
bpipe.Dependencies	[1]	INFO	|10:33:38 ----- test2.sai / entry 204920650 ------ 
bpipe.Dependencies	[1]	INFO	|10:33:38 test2.sai is newer than input files 
bpipe.Dependencies	[1]	INFO	|10:33:38 ----- test1.bam / entry 204920650 ------ 
bpipe.Dependencies	[1]	INFO	|10:33:38 test1.bam is newer than input files 
bpipe.Dependencies	[1]	INFO	|10:33:38 test1.bam does not exist 
bpipe.Dependencies	[1]	INFO	|10:33:38 test1.bam removed but not by bpipe 
bpipe.Dependencies	[1]	INFO	|10:33:38 ====Finished Output Graph===== 
bpipe.Dependencies	[1]	INFO	|10:33:38  Checking file test1.gz 
bpipe.Dependencies	[1]	INFO	|10:33:38  Checking file test2.gz 
bpipe.ReportStatisticsListener	[1]	INFO	|10:33:38 Annotating stage start time align_bwa 
bpipe.PipelineStage	[1]	INFO	|10:33:38 Stage align_bwa : INPUT=[test1.gz, test2.gz] OUTPUT=test1.gz.align_bwa 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Setting or creating a delegate for context 1857196397 body 470945515/script1417775617813850974635 in thread 1 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Created new delegate bpipe.PipelineDelegate@7dbff9ea overriding type script1417775617813850974635 in thread 1 
bpipe.TransformOperation	[1]	INFO	|10:33:38 Transform using [sai, sai, bam] produces outputs [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Producing [test1.sai, test2.sai, test1.bam] from bpipe.PipelineContext@6eb2916d 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Setting or creating a delegate for context 1857196397 body 316288701/script1417775617813850974635$_run_closure1 in thread 1 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Created new delegate bpipe.PipelineDelegate@1275a539 overriding type script1417775617813850974635$_run_closure1 in thread 1 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Probing command using inputs [test1.gz, test2.gz] 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Input 1 reference resolved by PipelineDelegate 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Searching for missing Property: gz 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Resolving inputs matching pattern ^.*\.gz$ 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Checking outputs [test1.gz, test2.gz] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Found files with exts [gz$] : [[test1.gz, test2.gz]] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Adding resolved input test1.gz 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Output 1 reference resolved by PipelineDelegate 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Query for output 0 base result = test1.sai 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Input 2 reference resolved by PipelineDelegate 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Searching for missing Property: gz 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Resolving inputs matching pattern ^.*\.gz$ 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Checking outputs [test1.gz, test2.gz] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Found files with exts [gz$] : [[test1.gz, test2.gz]] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Adding resolved input test2.gz 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Output 2 reference resolved by PipelineDelegate 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Query for output 1 base result = test2.sai 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Scaled resource use to [1 threads] to execute in multi block 
bpipe.ReportStatisticsListener	[1]	INFO	|10:33:38 Intercepted command check for command echo 'execute multi1'; gunzip -c test1.gz > test1.sai 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Checking actual resolved inputs [test1.gz] 
bpipe.ReportStatisticsListener	[1]	INFO	|10:33:38 Intercepted command check for command echo 'execute multi2'; gunzip -c test2.gz > test2.sai 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Checking actual resolved inputs [test1.gz] 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Output 1 reference resolved by PipelineDelegate 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Query for output 0 base result = test1.sai 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Output 2 reference resolved by PipelineDelegate 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Query for output 1 base result = test2.sai 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Input 1 reference resolved by PipelineDelegate 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Searching for missing Property: gz 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Resolving inputs matching pattern ^.*\.gz$ 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Checking outputs [test1.gz, test2.gz] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Found files with exts [gz$] : [[test1.gz, test2.gz]] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Adding resolved input test1.gz 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Input 2 reference resolved by PipelineDelegate 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Searching for missing Property: gz 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Resolving inputs matching pattern ^.*\.gz$ 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Checking outputs [test1.gz, test2.gz] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Found files with exts [gz$] : [[test1.gz, test2.gz]] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Adding resolved input test2.gz 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineOutput	[1]	INFO	|10:33:38 Selected output test1.bam with extension bam from expected outputs [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Tracking outputs referenced=[[]] inferred=[[test1.bam, test1.sai, test2.sai]] for command 
            echo 'execute cat'

            cat test1.sai test2.sai test1.gz test2.gz > test1.bam
         
bpipe.ReportStatisticsListener	[1]	INFO	|10:33:38 Intercepted command check for command 
            echo 'execute cat'

            cat test1.sai test2.sai test1.gz test2.gz > test1.bam
         
bpipe.PipelineContext	[1]	INFO	|10:33:38 Checking actual resolved inputs [test1.gz] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Finished probe 
bpipe.Utils	[1]	INFO	|10:33:38 ===== Check test1.sai ===== 
bpipe.Utils	[1]	INFO	|10:33:38 file doesn't exist: test1.sai 
bpipe.Utils	[1]	INFO	|10:33:38 ===== Check test2.sai ===== 
bpipe.Utils	[1]	INFO	|10:33:38 Checking test2.sai against inputs [test1.gz, test2.gz] 
bpipe.Utils	[1]	INFO	|10:33:38 Check test1.gz : 1416995053000 >  test2.sai : 1417775607000 
bpipe.Utils	[1]	INFO	|10:33:38 Check test2.gz : 1416995053000 >  test2.sai : 1417775607000 
bpipe.Utils	[1]	INFO	|10:33:38 ===== Check test1.bam ===== 
bpipe.Utils	[1]	INFO	|10:33:38 file doesn't exist: test1.bam 
bpipe.Utils	[1]	INFO	|10:33:38 ===== Check test1.sai ===== 
bpipe.Utils	[1]	INFO	|10:33:38 file doesn't exist: test1.sai 
bpipe.Utils	[1]	INFO	|10:33:38 ===== Check test2.sai ===== 
bpipe.Utils	[1]	INFO	|10:33:38 Checking test2.sai against inputs [test1.gz, test2.gz] 
bpipe.Utils	[1]	INFO	|10:33:38 Check test1.gz : 1416995053000 >  test2.sai : 1417775607000 
bpipe.Utils	[1]	INFO	|10:33:38 Check test2.gz : 1416995053000 >  test2.sai : 1417775607000 
bpipe.Utils	[1]	INFO	|10:33:38 ===== Check test1.bam ===== 
bpipe.Utils	[1]	INFO	|10:33:38 file doesn't exist: test1.bam 
bpipe.Dependencies	[1]	INFO	|10:33:38 Found these missing / older files: [test1.sai, test1.bam, test1.sai, test1.bam] 
bpipe.Dependencies	[1]	INFO	|10:33:38 Some files are outdated : [test1.sai, test1.bam, test1.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Not up to date because input inferred by probe of body newer than outputs 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Setting or creating a delegate for context 1857196397 body 316288701/bpipe.PipelineDelegate in thread 1 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Existing delegate bpipe.PipelineDelegate@1275a539 has type bpipe.PipelineDelegate in thread 1. Setting new context 1857196397 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Producing from inputs [test1.gz, test2.gz] 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Input 1 reference resolved by PipelineDelegate 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Searching for missing Property: gz 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Resolving inputs matching pattern ^.*\.gz$ 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Checking outputs [test1.gz, test2.gz] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Found files with exts [gz$] : [[test1.gz, test2.gz]] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Adding resolved input test1.gz 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Output 1 reference resolved by PipelineDelegate 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Query for output 0 base result = test1.sai 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Input 2 reference resolved by PipelineDelegate 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Searching for missing Property: gz 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Resolving inputs matching pattern ^.*\.gz$ 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Checking outputs [test1.gz, test2.gz] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Found files with exts [gz$] : [[test1.gz, test2.gz]] 
bpipe.PipelineInput	[1]	INFO	|10:33:38 Adding resolved input test2.gz 
bpipe.PipelineDelegate	[1]	INFO	|10:33:38 Output 2 reference resolved by PipelineDelegate 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Query for output 1 base result = test2.sai 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Scaled resource use to [1 threads] to execute in multi block 
bpipe.ReportStatisticsListener	[1]	INFO	|10:33:38 Intercepted command check for command echo 'execute multi1'; gunzip -c test1.gz > test1.sai 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Checking actual resolved inputs [test1.gz] 
bpipe.Utils	[1]	INFO	|10:33:38 ===== Check test1.sai ===== 
bpipe.Utils	[1]	INFO	|10:33:38 file doesn't exist: test1.sai 
bpipe.Dependencies	[1]	INFO	|10:33:38 Found these missing / older files: [test1.sai] 
bpipe.Dependencies	[1]	INFO	|10:33:38 Some files are outdated : [test1.sai] 
bpipe.Command	[1]	INFO	|10:33:38 Checking for configuration for command echo 
bpipe.Command	[1]	INFO	|10:33:38 Default command properties: [executor:local] 
bpipe.CommandManager	[1]	INFO	|10:33:38 Using config [executor:local] for command 
bpipe.CommandManager	[1]	INFO	|10:33:38 Created bpipe command id 8 
bpipe.ReportStatisticsListener	[1]	INFO	|10:33:38 Intercepted command check for command echo 'execute multi2'; gunzip -c test2.gz > test2.sai 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Checking actual resolved inputs [test1.gz] 
bpipe.Utils	[1]	INFO	|10:33:38 ===== Check test2.sai ===== 
bpipe.Utils	[1]	INFO	|10:33:38 Checking test2.sai against inputs [test1.gz] 
bpipe.Utils	[1]	INFO	|10:33:38 Check test1.gz : 1416995053000 >  test2.sai : 1417775607000 
bpipe.Dependencies	[1]	INFO	|10:33:38 No missing / older files from inputs: [test2.sai] are up to date 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Skipping command echo 'execute multi2'; gunzip ... due to inferred outputs [test2.sai] newer than inputs [test1.gz, test2.gz] 
bpipe.PipelineContext	[1]	INFO	|10:33:38 Waiting for 2 commands in multi block 
bpipe.Concurrency	[21]	INFO	|10:33:38 Thread Thread-8 requesting for 1 concurrency permit(s) type threads with 32 available 
bpipe.Concurrency	[21]	INFO	|10:33:38 Thread Thread-8 acquired resource threads in amount 1 
bpipe.Command	[23]	INFO	|10:33:38 Command 8 changing state from null to RUNNING 
bpipe.executor.ThrottledDelegatingCommandExecutor	[21]	INFO	|10:33:38 Waiting for command to complete before releasing 1 resources 
bpipe.Command	[21]	INFO	|10:33:38 Command 8 changing state from RUNNING to COMPLETE 
bpipe.executor.ThrottledDelegatingCommandExecutor	[21]	INFO	|10:33:38 Releasing 1 resources 
bpipe.Concurrency	[21]	INFO	|10:33:38 Thread Thread-8 releasing 1 threads 
bpipe.executor.ThrottledDelegatingCommandExecutor	[21]	INFO	|10:33:38 Released 1 resources 
bpipe.PipelineDelegate	[1]	INFO	|10:33:40 Output 1 reference resolved by PipelineDelegate 
bpipe.PipelineContext	[1]	INFO	|10:33:40 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:40 Query for output 0 base result = test1.sai 
bpipe.PipelineDelegate	[1]	INFO	|10:33:40 Output 2 reference resolved by PipelineDelegate 
bpipe.PipelineContext	[1]	INFO	|10:33:40 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:40 Query for output 1 base result = test2.sai 
bpipe.PipelineDelegate	[1]	INFO	|10:33:40 Input 1 reference resolved by PipelineDelegate 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Searching for missing Property: gz 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Resolving inputs matching pattern ^.*\.gz$ 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Checking outputs [test1.gz, test2.gz] 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Found files with exts [gz$] : [[test1.gz, test2.gz]] 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Adding resolved input test1.gz 
bpipe.PipelineDelegate	[1]	INFO	|10:33:40 Input 2 reference resolved by PipelineDelegate 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Searching for missing Property: gz 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Resolving inputs matching pattern ^.*\.gz$ 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Checking outputs [test1.gz, test2.gz] 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Found files with exts [gz$] : [[test1.gz, test2.gz]] 
bpipe.PipelineInput	[1]	INFO	|10:33:40 Adding resolved input test2.gz 
bpipe.PipelineContext	[1]	INFO	|10:33:40 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineOutput	[1]	INFO	|10:33:40 Selected output test1.bam with extension bam from expected outputs [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:40 Tracking outputs referenced=[[]] inferred=[[test2.sai, test1.bam, test1.sai]] for command 
            echo 'execute cat'

            cat test1.sai test2.sai test1.gz test2.gz > test1.bam
         
bpipe.ReportStatisticsListener	[1]	INFO	|10:33:40 Intercepted command check for command 
            echo 'execute cat'

            cat test1.sai test2.sai test1.gz test2.gz > test1.bam
         
bpipe.PipelineContext	[1]	INFO	|10:33:40 Checking actual resolved inputs [test1.gz] 
bpipe.Utils	[1]	INFO	|10:33:40 ===== Check test2.sai ===== 
bpipe.Utils	[1]	INFO	|10:33:40 Checking test2.sai against inputs [test1.gz] 
bpipe.Utils	[1]	INFO	|10:33:40 Check test1.gz : 1416995053000 >  test2.sai : 1417775607000 
bpipe.Utils	[1]	INFO	|10:33:40 ===== Check test1.bam ===== 
bpipe.Utils	[1]	INFO	|10:33:40 file doesn't exist: test1.bam 
bpipe.Utils	[1]	INFO	|10:33:40 ===== Check test1.sai ===== 
bpipe.Utils	[1]	INFO	|10:33:40 Checking test1.sai against inputs [test1.gz] 
bpipe.Utils	[1]	INFO	|10:33:40 Check test1.gz : 1416995053000 >  test1.sai : 1417775618000 
bpipe.Dependencies	[1]	INFO	|10:33:40 Found these missing / older files: [test1.bam] 
bpipe.Dependencies	[1]	INFO	|10:33:40 Some files are outdated : [test1.bam] 
bpipe.Command	[1]	INFO	|10:33:40 Checking for configuration for command echo 
bpipe.Command	[1]	INFO	|10:33:40 Default command properties: [executor:local] 
bpipe.CommandManager	[1]	INFO	|10:33:40 Using config [executor:local] for command 
bpipe.CommandManager	[1]	INFO	|10:33:40 Created bpipe command id 9 
bpipe.Concurrency	[1]	INFO	|10:33:40 Thread main requesting for 1 concurrency permit(s) type threads with 32 available 
bpipe.Concurrency	[1]	INFO	|10:33:40 Thread main acquired resource threads in amount 1 
bpipe.Command	[27]	INFO	|10:33:40 Command 9 changing state from null to RUNNING 
bpipe.executor.ThrottledDelegatingCommandExecutor	[1]	INFO	|10:33:40 Waiting for command to complete before releasing 1 resources 
bpipe.Command	[1]	INFO	|10:33:40 Command 9 changing state from RUNNING to COMPLETE 
bpipe.executor.ThrottledDelegatingCommandExecutor	[1]	INFO	|10:33:40 Releasing 1 resources 
bpipe.Concurrency	[1]	INFO	|10:33:40 Thread main releasing 1 threads 
bpipe.executor.ThrottledDelegatingCommandExecutor	[1]	INFO	|10:33:40 Released 1 resources 
bpipe.PipelineContext	[1]	INFO	|10:33:40 Adding outputs [test1.sai, test2.sai, test1.bam] as a result of produce 
bpipe.PipelineStage	[1]	INFO	|10:33:40 Stage align_bwa returned null as default inputs for next stage 
bpipe.PipelineStage	[1]	INFO	|10:33:40 Inferring nextInputs from explicit output as [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineStage	[1]	INFO	|10:33:40 Setting next inputs [test1.sai, test2.sai, test1.bam] on stage 738278318, context 1857196397 in thread 1 
bpipe.Dependencies	[1]	INFO	|10:33:40 Ignoring output test2.sai because it was not created or modified by stage align_bwa 
bpipe.Dependencies	[1]	INFO	|10:33:40 Reading property file .bpipe/outputs/align_bwa.test1.bam.properties 
bpipe.Dependencies	[1]	INFO	|10:33:40 Context 1857196397 for stage align_bwa has resolved inputs [test1.gz, test2.gz] 
bpipe.Dependencies	[1]	INFO	|10:33:40 Saving output file details to file .bpipe/outputs/align_bwa.test1.bam.properties for command echo 'execute cat'; ... 
bpipe.Dependencies	[1]	INFO	|10:33:40 Reading property file .bpipe/outputs/align_bwa.test1.sai.properties 
bpipe.Dependencies	[1]	INFO	|10:33:40 Context 1857196397 for stage align_bwa has resolved inputs [test1.gz, test2.gz] 
bpipe.Dependencies	[1]	INFO	|10:33:40 Saving output file details to file .bpipe/outputs/align_bwa.test1.sai.properties for command echo 'execute cat'; ... 
bpipe.ReportStatisticsListener	[1]	INFO	|10:33:40 Annotating stage end time align_bwa 
bpipe.PipelineStage	[1]	INFO	|10:33:40 Checking files: [test1.sai, test2.sai, test1.bam] 
bpipe.Dependencies	[1]	INFO	|10:33:40 Checking output (s) [test1.sai, test2.sai, test1.bam] 
bpipe.Dependencies	[1]	INFO	|10:33:40  Checking file test1.sai 
bpipe.Dependencies	[1]	INFO	|10:33:40  Checking file test2.sai 
bpipe.Dependencies	[1]	INFO	|10:33:40  Checking file test1.bam 
bpipe.Pipeline	[1]	INFO	|10:33:40 Pipeline segment  in thread 1 has finished normally 
bpipe.Pipeline	[1]	INFO	|10:33:40 Finished running segment for inputs [test1.gz, test2.gz] 
bpipe.Pipeline	[1]	INFO	|10:33:40 adding stage align_bwa from pipeline bpipe.Pipeline@6a15a218 
bpipe.Dependencies	[30]	INFO	|10:33:40 Reading property file .bpipe/outputs/align_bwa.test1.sai.properties 
bpipe.Dependencies	[31]	INFO	|10:33:40 Reading property file .bpipe/outputs/align_bwa.test2.sai.properties 
bpipe.Dependencies	[32]	INFO	|10:33:40 Reading property file .bpipe/outputs/align_bwa.test1.bam.properties 
bpipe.Utils	[1]	INFO	|10:33:40 Output folder scan (concurrency=5) executed in 0.007 seconds 
bpipe.Dependencies	[1]	INFO	|10:33:40 External inputs: [[test1.gz, test2.gz], [test1.gz, test2.gz], [test1.gz, test2.gz]] for outputs [test2.sai, test1.sai, test1.bam] 
bpipe.Dependencies	[1]	INFO	|10:33:40 There are 1 output groups 
bpipe.Dependencies	[1]	INFO	|10:33:40 Subtracting 3 remaining outputs from 3 total outputs 
bpipe.Dependencies	[1]	INFO	|10:33:40 There are 0 remaining outputs 
bpipe.Dependencies	[1]	INFO	|10:33:40 ----- test2.sai / entry 1597801462 ----- 
bpipe.Dependencies	[1]	INFO	|10:33:40 test2.sai is newer than input files 
bpipe.Dependencies	[1]	INFO	|10:33:40 ----- test1.sai / entry 1597801462 ----- 
bpipe.Dependencies	[1]	INFO	|10:33:40 test1.sai is newer than input files 
bpipe.Dependencies	[1]	INFO	|10:33:40 ----- test1.bam / entry 1597801462 ----- 
bpipe.Dependencies	[1]	INFO	|10:33:40 test1.bam is newer than input files 
bpipe.Dependencies	[1]	INFO	|10:33:40 ====Finished Output Graph===== 
bpipe.ReportGenerator	[1]	INFO	|10:33:40 Searching for template in /lustre/scratch112/sanger/cgppipe/canPipe/software/bpipe_git/src/main/html/bpipe 
bpipe.ReportGenerator	[1]	INFO	|10:33:40 Generating report to /lustre/scratch112/sanger/cgppipe/canPipe/software/bpipe_git/tests/multi_deps/doc/index.html 
bpipe.PipelineContext	[1]	INFO	|10:33:41 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:41 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.PipelineContext	[1]	INFO	|10:33:41 Using previously set output: [test1.sai, test2.sai, test1.bam] 
bpipe.Dependencies	[34]	INFO	|10:33:41 Reading property file .bpipe/outputs/align_bwa.test1.sai.properties 
bpipe.Dependencies	[36]	INFO	|10:33:41 Reading property file .bpipe/outputs/align_bwa.test1.bam.properties 
bpipe.Dependencies	[35]	INFO	|10:33:41 Reading property file .bpipe/outputs/align_bwa.test2.sai.properties 
bpipe.Utils	[1]	INFO	|10:33:41 Output folder scan (concurrency=5) executed in 0.007 seconds 
bpipe.Dependencies	[1]	INFO	|10:33:41 External inputs: [[test1.gz, test2.gz], [test1.gz, test2.gz], [test1.gz, test2.gz]] for outputs [test2.sai, test1.sai, test1.bam] 
bpipe.Dependencies	[1]	INFO	|10:33:41 There are 1 output groups 
bpipe.Dependencies	[1]	INFO	|10:33:41 Subtracting 3 remaining outputs from 3 total outputs 
bpipe.Dependencies	[1]	INFO	|10:33:41 There are 0 remaining outputs 
bpipe.Dependencies	[1]	INFO	|10:33:41 ----- test2.sai / entry 576939464 ------ 
bpipe.Dependencies	[1]	INFO	|10:33:41 test2.sai is newer than input files 
bpipe.Dependencies	[1]	INFO	|10:33:41 ----- test1.sai / entry 576939464 ------ 
bpipe.Dependencies	[1]	INFO	|10:33:41 test1.sai is newer than input files 
bpipe.Dependencies	[1]	INFO	|10:33:41 ----- test1.bam / entry 576939464 ------ 
bpipe.Dependencies	[1]	INFO	|10:33:41 test1.bam is newer than input files 
bpipe.Dependencies	[1]	INFO	|10:33:41 ====Finished Output Graph===== 
bpipe.Pipeline	[1]	INFO	|10:33:41 Outputs are: 
		test1.sai
		test1.bam
		test2.sai (pre-existing) 
bpipe.Runner	[9]	INFO	|10:33:41 Deleting job file /nfs/users/nfs_c/cgppipe/.bpipedb/jobs/13711 
